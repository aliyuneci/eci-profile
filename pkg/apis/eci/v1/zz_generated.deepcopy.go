//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FairPolicySource) DeepCopyInto(out *FairPolicySource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FairPolicySource.
func (in *FairPolicySource) DeepCopy() *FairPolicySource {
	if in == nil {
		return nil
	}
	out := new(FairPolicySource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceResourceLimitPolicySource) DeepCopyInto(out *NamespaceResourceLimitPolicySource) {
	*out = *in
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = make(corev1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceResourceLimitPolicySource.
func (in *NamespaceResourceLimitPolicySource) DeepCopy() *NamespaceResourceLimitPolicySource {
	if in == nil {
		return nil
	}
	out := new(NamespaceResourceLimitPolicySource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NormalNodeOnlyPolicySource) DeepCopyInto(out *NormalNodeOnlyPolicySource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NormalNodeOnlyPolicySource.
func (in *NormalNodeOnlyPolicySource) DeepCopy() *NormalNodeOnlyPolicySource {
	if in == nil {
		return nil
	}
	out := new(NormalNodeOnlyPolicySource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NormalNodePreferPolicySource) DeepCopyInto(out *NormalNodePreferPolicySource) {
	*out = *in
	if in.CPURatio != nil {
		in, out := &in.CPURatio, &out.CPURatio
		*out = new(int)
		**out = **in
	}
	if in.MemoryRatio != nil {
		in, out := &in.MemoryRatio, &out.MemoryRatio
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NormalNodePreferPolicySource.
func (in *NormalNodePreferPolicySource) DeepCopy() *NormalNodePreferPolicySource {
	if in == nil {
		return nil
	}
	out := new(NormalNodePreferPolicySource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicySource) DeepCopyInto(out *PolicySource) {
	*out = *in
	if in.Fair != nil {
		in, out := &in.Fair, &out.Fair
		*out = new(FairPolicySource)
		**out = **in
	}
	if in.NormalNodeOnly != nil {
		in, out := &in.NormalNodeOnly, &out.NormalNodeOnly
		*out = new(NormalNodeOnlyPolicySource)
		**out = **in
	}
	if in.NormalNodePrefer != nil {
		in, out := &in.NormalNodePrefer, &out.NormalNodePrefer
		*out = new(NormalNodePreferPolicySource)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualNodeOnly != nil {
		in, out := &in.VirtualNodeOnly, &out.VirtualNodeOnly
		*out = new(VirtualNodeOnlyPolicySource)
		**out = **in
	}
	if in.NamespaceResourceLimit != nil {
		in, out := &in.NamespaceResourceLimit, &out.NamespaceResourceLimit
		*out = new(NamespaceResourceLimitPolicySource)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicySource.
func (in *PolicySource) DeepCopy() *PolicySource {
	if in == nil {
		return nil
	}
	out := new(PolicySource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Selector) DeepCopyInto(out *Selector) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Selector.
func (in *Selector) DeepCopy() *Selector {
	if in == nil {
		return nil
	}
	out := new(Selector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Selector) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelectorList) DeepCopyInto(out *SelectorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Selector, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelectorList.
func (in *SelectorList) DeepCopy() *SelectorList {
	if in == nil {
		return nil
	}
	out := new(SelectorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SelectorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelectorSpec) DeepCopyInto(out *SelectorSpec) {
	*out = *in
	if in.NamespaceLabels != nil {
		in, out := &in.NamespaceLabels, &out.NamespaceLabels
		*out = new(metav1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.ObjectLabels != nil {
		in, out := &in.ObjectLabels, &out.ObjectLabels
		*out = new(metav1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(SideEffect)
		(*in).DeepCopyInto(*out)
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(PolicySource)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelectorSpec.
func (in *SelectorSpec) DeepCopy() *SelectorSpec {
	if in == nil {
		return nil
	}
	out := new(SelectorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SideEffect) DeepCopyInto(out *SideEffect) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SideEffect.
func (in *SideEffect) DeepCopy() *SideEffect {
	if in == nil {
		return nil
	}
	out := new(SideEffect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNodeOnlyPolicySource) DeepCopyInto(out *VirtualNodeOnlyPolicySource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNodeOnlyPolicySource.
func (in *VirtualNodeOnlyPolicySource) DeepCopy() *VirtualNodeOnlyPolicySource {
	if in == nil {
		return nil
	}
	out := new(VirtualNodeOnlyPolicySource)
	in.DeepCopyInto(out)
	return out
}
